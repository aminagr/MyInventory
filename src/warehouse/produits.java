
package warehouse;

import dao.CategoryDAO;
import dao.Product;
import dao.ProductDAO;
import dao.Provider;
import dao.ProviderDAO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author amina
 */
public class produits extends javax.swing.JPanel {

    
    public produits() {
        initComponents();
        jTable1.setRowHeight(128);
        tb_load();
        combo_load();
                updatebtn.setVisible(false);
                idlabel.setVisible(false);
imagesArea.setVisible(false);
jScrollPane2.setVisible(false);

     // CategoryDAO cddd = new CategoryDAO();
        //   p_cat = new JComboBox<>(cddd.getCategoryNames());
    
    }
    
    
    
    public void combo_load(){
         CategoryDAO cddd = new CategoryDAO();
       String[] categoryNames = cddd.getCategoryNames();

 
        for (String categoryName : categoryNames) {
            p_cat.addItem(categoryName); }
        
ProviderDAO pddd = new ProviderDAO();        
        String[] providerNames = pddd.getProviderNames();
        for(String providerName : providerNames){
        p_f.addItem(providerName);
        }
        
        
    
    }


    
    
    public void tb_load(){

  
   try {
        DefaultTableModel dt = (DefaultTableModel) jTable1.getModel();
        dt.setRowCount(0);

        ProductDAO prd = new ProductDAO();
        List<Product> productList = prd.getAllProducts();

        for (Product product : productList) {
            Object[] rowData = {
                    product.getId(),
                    product.getName(),
                    product.getCategoryName(),
                    product.getPrice(),
                    product.getQuantity(),
                    product.getCodeBar(),
                    product.getProviderName(),
                    product.getImagess().isEmpty() ? "" : product.getImagess().get(0)

            };
            dt.addRow(rowData);
        }

               TableColumn imageColumn = jTable1.getColumnModel().getColumn(7);
            imageColumn.setCellRenderer(new ImageRenderer());

   
   
   } catch (Exception e) {
        System.out.println(e);
    }

  }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        p_nom = new javax.swing.JTextField();
        p_prix = new javax.swing.JTextField();
        p_qt = new javax.swing.JTextField();
        add_p = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        p_code = new javax.swing.JTextField();
        p_cat = new javax.swing.JComboBox<>();
        p_f = new javax.swing.JComboBox<>();
        updatebtn = new javax.swing.JButton();
        idlabel = new java.awt.Label();
        idfield = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        recherche_p = new javax.swing.JTextField();
        r_p_b = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        imagesArea = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        labelajouter = new javax.swing.JLabel();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Nom");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Catégorie");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Prix");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Quantité");

        p_nom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        p_nom.setBorder(null);
        p_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_nomActionPerformed(evt);
            }
        });

        p_prix.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        p_prix.setBorder(null);
        p_prix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_prixActionPerformed(evt);
            }
        });

        p_qt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        p_qt.setBorder(null);
        p_qt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_qtActionPerformed(evt);
            }
        });

        add_p.setBackground(new java.awt.Color(255, 255, 255));
        add_p.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/images/save-32.png"))); // NOI18N
        add_p.setBorder(null);
        add_p.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_pActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Code bar");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Fournisseur");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Images");

        p_code.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        p_code.setBorder(null);

        p_cat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        p_cat.setBorder(null);
        p_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_catActionPerformed(evt);
            }
        });

        p_f.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        p_f.setBorder(null);
        p_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_fActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(255, 255, 255));
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/images/save-as-32.png"))); // NOI18N
        updatebtn.setBorder(null);
        updatebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        idlabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        idlabel.setText("ID");

        idfield.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Choisir les images");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(p_cat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(p_f, 0, 132, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2)
                                    .addComponent(p_nom)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator3)
                                    .addComponent(p_prix)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator5)
                                    .addComponent(p_code)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator4)
                                    .addComponent(p_qt)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updatebtn)
                            .addComponent(add_p)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(idlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(p_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(p_cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(p_prix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(p_qt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(p_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(p_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(add_p)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatebtn)
                .addGap(18, 18, 18))
        );

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Catégorie", "Prix (DA)", "Quantité", "Code", "Fournisseur", "Image"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(200);
        }

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        recherche_p.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        recherche_p.setBorder(null);
        recherche_p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recherche_pActionPerformed(evt);
            }
        });

        r_p_b.setBackground(new java.awt.Color(255, 255, 255));
        r_p_b.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/images/search (1).png"))); // NOI18N
        r_p_b.setBorder(null);
        r_p_b.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        r_p_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_p_bActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1)
                    .addComponent(recherche_p, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(r_p_b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(recherche_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(r_p_b, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        imagesArea.setColumns(20);
        imagesArea.setRows(5);
        jScrollPane2.setViewportView(imagesArea);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 204));
        jLabel10.setText("GERER LES PRODUITS");

        labelajouter.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        labelajouter.setText("AJOUTER UN PRODUIT ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(labelajouter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(357, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addGap(325, 325, 325)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelajouter, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jLabel10)
                    .addContainerGap(74, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        edit.setBackground(new java.awt.Color(255, 255, 255));
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/images/edit-3-32.png"))); // NOI18N
        edit.setBorder(null);
        edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/images/delete-32.png"))); // NOI18N
        delete.setBorder(null);
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        print.setBackground(new java.awt.Color(255, 255, 255));
        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/images/printer-32.png"))); // NOI18N
        print.setBorder(null);
        print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(print)
                .addGap(105, 105, 105)
                .addComponent(edit)
                .addGap(100, 100, 100)
                .addComponent(delete)
                .addGap(314, 314, 314))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edit)
                    .addComponent(delete)
                    .addComponent(print))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void add_pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_pActionPerformed

      CategoryDAO cd = new CategoryDAO();
        ProviderDAO pd = new ProviderDAO();
        ProductDAO prd = new ProductDAO();

        String pr_nom = p_nom.getText();
        String pr_prix_str = p_prix.getText();
        String pr_qt_str = p_qt.getText();
        String pr_code = p_code.getText();

        String pr_cat = p_cat.getSelectedItem().toString();
        String pr_f = p_f.getSelectedItem().toString();

        if (pr_nom.isEmpty() || pr_prix_str.isEmpty() || pr_qt_str.isEmpty() || pr_code.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            double pr_prix = Double.parseDouble(pr_prix_str);
            int pr_qt = Integer.parseInt(pr_qt_str);

            int categoryId = cd.getCategoryIdByName(pr_cat);
            int providerId = pd.getProviderIdByName(pr_f);

            Product p = new Product();
            p.setName(pr_nom);
            p.setQuantity(pr_qt);
            p.setPrice(pr_prix);
            p.setCategoryId(categoryId);
            p.setProviderId(providerId);
            p.setCodeBar(pr_code);

            // Check if at least one image is selected
            if (imagesArea.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Veuillez sélectionner au moins une image pour le produit.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Extract image paths from JTextArea
            String[] imagePaths = imagesArea.getText().split("\n");
            List<String> images = new ArrayList<>(Arrays.asList(imagePaths));

            // Validate each image path
            for (String imagePath : images) {
                File imageFile = new File(imagePath);
                if (!imageFile.exists() || !isImageFile(imageFile)) {
                    JOptionPane.showMessageDialog(null, "Le chemin d'image spécifié n'est pas valide : " + imagePath, "Erreur", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            p.setImagess(images);

            prd.addProduct(p);
            refreshTable();
            JOptionPane.showMessageDialog(null, "Produit enregistré");
                    imagesArea.setText("");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Prix ou quantité invalide. Veuillez entrer une valeur numérique correcte.", "Erreur", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Insertion du produit impossible.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }

    

     

    }//GEN-LAST:event_add_pActionPerformed

    
    
    private boolean isImageFile(File file) {
        String fileName = file.getName().toLowerCase();
        return fileName.endsWith(".jpg") || fileName.endsWith(".jpeg") || fileName.endsWith(".png") || fileName.endsWith(".gif");
    
    
   /*  try {
        BufferedImage image = ImageIO.read(file);
        return image != null;
    } catch (IOException e) {
        return false;
    }*/
    
    }
    
    
    private void p_prixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_prixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_prixActionPerformed

    private void recherche_pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recherche_pActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recherche_pActionPerformed

    private void r_p_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_p_bActionPerformed

String searchKeyword = recherche_p.getText();

ProductDAO pdao = new ProductDAO();
                List<Product> searchResults = pdao.searchProducts(searchKeyword);
                updateTable(searchResults);
    }

    
private void updateTable(List<Product> productList) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);

    for (Product product : productList) {
        List<String> imagePaths = product.getImagess();
        String firstImagePath = imagePaths.isEmpty() ? "" : imagePaths.get(0);

        model.addRow(new Object[]{
                product.getId(),
                product.getName(),
                product.getCategoryName(),
                product.getPrice(),
                product.getQuantity(),
                product.getCodeBar(),
                product.getProviderName(),
                firstImagePath
        });
    }

    TableColumn imageColumn = jTable1.getColumnModel().getColumn(7); // Assuming image column is at index 6
    imageColumn.setCellRenderer(new ImageRenderer());


    
 
    }//GEN-LAST:event_r_p_bActionPerformed

    private void p_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_catActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_catActionPerformed

    private void p_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_fActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_fActionPerformed

    private void p_qtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_qtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_qtActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed


         int index = jTable1.getSelectedRow();
        if (index != -1) {
            
            
              int response = JOptionPane.showConfirmDialog(produits.this,
                "Voulez vous vraiment vous supprimer ce produit?", " Confirmation de suppression", JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            
            
            
        TableModel model = jTable1.getModel();
        int id = (int) model.getValueAt(index,0);
       
        ProductDAO dao = new ProductDAO();
        dao.deleteProduct(id);
        refreshTable();
        JOptionPane.showMessageDialog(this, "Produit supprimé avec succès");
        // refreshTable();
        }}
        else {
            JOptionPane.showMessageDialog(this, "veuillez selectionner un produit à supprimer.");
        }
          
    }//GEN-LAST:event_deleteActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed

    String pr_nom = p_nom.getText();
    String idd = idfield.getText();
    int id = Integer.parseInt(idd);

    double pr_prix = Double.parseDouble(p_prix.getText());
    String pr_cat = p_cat.getSelectedItem().toString();
    String pr_f = p_f.getSelectedItem().toString();
    int pr_qt = Integer.parseInt(p_qt.getText());
    String pr_code = p_code.getText();

    CategoryDAO cd = new CategoryDAO();
    ProviderDAO pd = new ProviderDAO();
    ProductDAO dao = new ProductDAO();
    Product p = new Product();
    int categoryId = cd.getCategoryIdByName(pr_cat);
    int providerId = pd.getProviderIdByName(pr_f);

    p.setId(id);
    p.setName(pr_nom);
    p.setQuantity(pr_qt);
    p.setPrice(pr_prix);
    p.setCategoryId(categoryId);
    p.setProviderId(providerId);
    p.setCodeBar(pr_code);

   

    // Check if at least one image is selected
    if (!hasSelectedImages()) {
        // If no new images are selected, don't delete old images
        
        dao.update2(p);
        
        
    } else {
        // Extract image paths from imagesArea
        List<String> images = getSelectedImages();

        // Validate each image path
        for (String imagePath : images) {
            File imageFile = new File(imagePath);
            if (!imageFile.exists() || !isImageFile(imageFile)) {
                JOptionPane.showMessageDialog(null, "Le chemin d'image spécifié n'est pas valide : " + imagePath, "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        p.setImagess(images);

        // Ask the user whether to delete old images
       boolean deleteOldImages = askUserToDeleteOldImages();
    

    dao.updateProduct(p, deleteOldImages);
    }
    refreshTable();
    JOptionPane.showMessageDialog(this, "Produit modifié avec succès");
    imagesArea.setText("");
   labelajouter.setText("AJOUTER LE RRODUIT");
    add_p.setVisible(true);
    updatebtn.setVisible(false);
    idfield.setVisible(false);
    idlabel.setVisible(false);
    
}

private boolean askUserToDeleteOldImages() {
    int choice = JOptionPane.showConfirmDialog(this, "Voulez-vous supprimer les anciennes images ?", "Choix des images", JOptionPane.YES_NO_OPTION);
    return choice == JOptionPane.YES_OPTION;
}

private boolean hasSelectedImages() {
    // Check if at least one image is selected in imagesArea
    return !imagesArea.getText().trim().isEmpty();
}

private List<String> getSelectedImages() {
    // Extract and return the list of selected image paths from imagesArea
    String[] imagePaths = imagesArea.getText().split("\n");
    return Arrays.asList(imagePaths);

    }//GEN-LAST:event_updatebtnActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed


 int index = jTable1.getSelectedRow();
        if (index != -1) {
        TableModel model = jTable1.getModel();
    
         int id = (int) model.getValueAt(index,0);   
        String nom = (String) model.getValueAt(index,1);
        String categorie = (String) model.getValueAt(index,2);
        //String prix = (String) model.getValueAt(index,3);
        Double prix = (Double) model.getValueAt(index,3);
         int qt =  (int) model.getValueAt(index,4);
           String code = (String) model.getValueAt(index,5);
           String fournisseur = (String) model.getValueAt(index,6);
           
           
       String qtt = Integer.toString(qt);  
       String prixx = Double.toString(prix);
       String idd = Integer.toString(id);
       p_nom.setText(nom); 
        p_cat.setSelectedItem(categorie);
        p_prix.setText(prixx);
        p_qt.setText(qtt);
        p_code.setText(code);
        p_f.setSelectedItem(fournisseur);
        
        
      idfield.setVisible(true);
        idlabel.setVisible(true);
      
        idfield.setText(idd);
        
       add_p.setVisible(false); 
       labelajouter.setText("MODIFIER LE RRODUIT");
        updatebtn.setVisible(true);
        
       
        // refreshTable();
        }
        else {
            JOptionPane.showMessageDialog(this, "veuillez selectionner un produit à modifier.");
        }




    }//GEN-LAST:event_editActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
imagesArea.setText("");
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setMultiSelectionEnabled(true);

    int option = fileChooser.showOpenDialog(this);

    if (option == JFileChooser.APPROVE_OPTION) {
        File[] selectedFiles = fileChooser.getSelectedFiles();

        for (File file : selectedFiles) {
            // Append each selected image path to the existing content in JTextArea
            imagesArea.append(file.getAbsolutePath() + "\n");
        }
    }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void p_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_nomActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printActionPerformed


    
    
    private void refreshTable() {

    ProductDAO dao = new ProductDAO();
    List<Product> productList = dao.getAllProducts();

    DefaultTableModel newTableModel = new DefaultTableModel(new Object[]{"ID", "Nom", "Catégorie", "Prix(DA)", "Quantité", "Code", "Fournisseur", "Image"}, 0);

    for (Product product : productList) {
        Object[] rowData = {
                product.getId(),
                product.getName(),
                product.getCategoryName(),
                product.getPrice(),
                product.getQuantity(),
                product.getCodeBar(),
                product.getProviderName(),
                product.getImagess().isEmpty() ? "" : product.getImagess().get(0)  // Display only the first image
        };
        newTableModel.addRow(rowData);
    }

    jTable1.setModel(newTableModel);
jTable1.setRowHeight(128);
    // Assuming the image column is at index 7 (adjust accordingly)
    TableColumn imageColumn = jTable1.getColumnModel().getColumn(7);
    imageColumn.setCellRenderer(new ImageRenderer());

}

    
    
    
    
    public boolean isCellEditable(int row, int column) {
        return false; // Make the table cells non-editable
    }

    
    public Class<?> getColumnClass(int columnIndex) {
        if (columnIndex == 7) {
            return ImageIcon.class; // Assuming column 7 is the image column
        }
        return getColumnClass(columnIndex);
    }

  
    public String getColumnName(int column) {
              String[] columnNames = {"ID", "Name", "Category", "Price", "Quantity", "Code Bar", "Provider", "Image"};

        return columnNames[column];
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_p;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private java.awt.Label idfield;
    private java.awt.Label idlabel;
    private javax.swing.JTextArea imagesArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelajouter;
    private javax.swing.JComboBox<String> p_cat;
    private javax.swing.JTextField p_code;
    private javax.swing.JComboBox<String> p_f;
    private javax.swing.JTextField p_nom;
    private javax.swing.JTextField p_prix;
    private javax.swing.JTextField p_qt;
    private javax.swing.JButton print;
    private javax.swing.JButton r_p_b;
    private javax.swing.JTextField recherche_p;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
